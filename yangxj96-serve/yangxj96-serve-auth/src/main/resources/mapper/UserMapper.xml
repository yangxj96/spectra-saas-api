<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2018 - 2023
  ~ 作者：杨新杰(Jack Young)
  ~ 邮箱：yangxj96@gmail.com
  ~ 博客：www.yangxj96.com
  ~ 日期：2023-09-13 00:04:11
  ~ Copyright (c) 2018 - 2023
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yangxj96.saas.server.auth.mapper.UserMapper">
    <!-- @formatter:off -->
    <resultMap id="BaseResultMap" type="com.yangxj96.saas.bean.user.User">
        <!--@mbg.generated-->
        <!--@Table db_user.t_user-->
        <id column="id"                      jdbcType="BIGINT"    property="id"/>
        <result column="username"            jdbcType="VARCHAR"   property="username"/>
        <result column="password"            jdbcType="VARCHAR"   property="password"/>
        <result column="access_expired"      jdbcType="BOOLEAN"   property="accessExpired"/>
        <result column="access_locked"       jdbcType="BOOLEAN"   property="accessLocked"/>
        <result column="access_enable"       jdbcType="BOOLEAN"   property="accessEnable"/>
        <result column="credentials_expired" jdbcType="BOOLEAN"   property="credentialsExpired"/>
        <result column="created_user"        jdbcType="BIGINT"    property="createdUser"/>
        <result column="created_time"        jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="updated_user"        jdbcType="BIGINT"    property="updatedUser"/>
        <result column="updated_time"        jdbcType="TIMESTAMP" property="updatedTime"/>
        <result column="deleted"             jdbcType="TIMESTAMP" property="deleted"/>
    </resultMap>
    <!-- @formatter:on -->

    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id,
        username,
        "password",
        access_expired,
        access_locked,
        access_enable,
        credentials_expired,
        created_user,
        created_time,
        updated_user,
        updated_time,
        deleted
    </sql>

    <insert id="relevance">
        INSERT INTO db_user.t_user_to_role(id, user_id, role_id, created_user, created_time, updated_user, updated_time)
        VALUES (#{id}, #{user}, #{role}, 0, now(), 0, now())
    </insert>

    <select id="getRoleByUserId" resultType="com.yangxj96.saas.bean.user.Role">
        SELECT r.*
        FROM db_user.t_role r,
        db_user.t_user_to_role tr,
        db_user.t_user u
        WHERE u.id = #{userId}
        AND r.id = tr.role_id
        AND tr.user_id = u.id
    </select>

    <select id="getAuthorityByRoleIds" resultType="com.yangxj96.saas.bean.user.Authority">
        SELECT DISTINCT (a.*)
        FROM db_user.t_authority a,
        db_user.t_role_to_authority ta
        WHERE a.id = ta.authority_id
        AND ta.role_id IN
        <foreach collection="ids" open="(" close=")" separator="," index="idx" item="item">
            #{item}
        </foreach>
    </select>
</mapper>
